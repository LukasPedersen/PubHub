@page "/ReaderPage"

@using PubHubWebServer.Data.Models
@using PubHubWebServer.Services
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using PubHubWebServer.Data
@using System.Net.Http.Headers
@using Blazored.LocalStorage
@using System.Net
@using BlazorDownloadFile;

@inject UserManager<ApplicationUser> userManager
@inject SignInManager<ApplicationUser> signInManager
@inject NavigationManager navigationManager
@inject IPubHubServices services
@inject IBlazorDownloadFileService fileService
@inject IJSRuntime JS

@rendermode InteractiveServer
@attribute [Authorize(Roles = "Reader")]

<div class="row text-white">
    @{
        if (Subscriptions.Count() > 0 || BooksFromSubscriptions.Count() > 0)
        {
            <div class="col-6">
                @if (Subscriptions.Count() > 0)
                {
                    <div class="row">
                        <div class="col-12">
                            <div class="col-12" style="text-align:center"><h3>Dine abonnementer</h3></div>
                            <div class="col-12">
                                <table class="table table-light table-bordered">
                                    <thead>
                                        <tr>
                                            <th scope="col">Title</th>
                                            <th scope="col">Price</th>
                                            <th scope="col">Aktiv</th>
                                            <th scope="col">Handlinger</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (PubHubSubscription subscription in Subscriptions)
                                        {
                                            <tr>
                                                <th scope="row">@subscription.Title</th>
                                                <td>@subscription.Price</td>
                                                <td>@subscription.Active</td>
                                                <td>
                                                    <button @onclick="() => UnSubFromSubscription(subscription.SubscriptionID)" class="btn btn-danger">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
                                                            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z" />
                                                        </svg>
                                                    </button>
                                                    <NavLink href=@($"/SubscriptionDetail/{subscription.SubscriptionID}")>
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="text-dark" class="bi bi-info-circle" viewBox="0 0 16 16">
                                                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                            <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0" />
                                                        </svg>
                                                    </NavLink>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }
                @if (BooksFromSubscriptions.Count() > 0)
                {
                    <div class="row">
                        <div class="col-12" style="text-align:center"><h3>Dine bøger fra dine abonnementer</h3></div>
                        <div class="col-12">

                            <table class="table table-light table-bordered">
                                <thead>
                                    <tr>
                                        <th scope="col">Title</th>
                                        <th scope="col">Price</th>
                                        <th scope="col">Genre</th>
                                        <th scope="col">Handlinger</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (PubHubEBook book in BooksFromSubscriptions)
                                    {
                                        <tr>
                                            <th scope="row">@book.Title</th>
                                            <td>@book.Price</td>
                                            <td>@book.Genre</td>
                                            <td>
                                                <a href="/Book/Read/@book.EBookID" class="btn btn-success">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyeglasses" viewBox="0 0 16 16">
                                                        <path d="M4 6a2 2 0 1 1 0 4 2 2 0 0 1 0-4m2.625.547a3 3 0 0 0-5.584.953H.5a.5.5 0 0 0 0 1h.541A3 3 0 0 0 7 8a1 1 0 0 1 2 0 3 3 0 0 0 5.959.5h.541a.5.5 0 0 0 0-1h-.541a3 3 0 0 0-5.584-.953A2 2 0 0 0 8 6c-.532 0-1.016.208-1.375.547M14 8a2 2 0 1 1-4 0 2 2 0 0 1 4 0" />
                                                    </svg>
                                                </a>
                                                <div style="max-width:30px;">
                                                    <NavLink class="nav-link" href="@($"/BookDetail/{book.EBookID}")">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="text-dark" class="bi bi-info-circle" viewBox="0 0 16 16">
                                                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                            <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0" />
                                                        </svg>
                                                    </NavLink>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
            </div>

            <div class="col-6">
                <div class="col-12" style="text-align:center"><h3>Dine købte bøger</h3></div>
                <div class="col-12">
                    <table class="table table-light table-bordered">
                        <thead>
                            <tr>
                                <th scope="col">Title</th>
                                <th scope="col">Price</th>
                                <th scope="col">Genre</th>
                                <th scope="col">Handlinger</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (PubHubEBook book in PurchasedBooks)
                            {
                                <tr>
                                    <th scope="row">@book.Title</th>
                                    <td>@book.Price</td>
                                    <td>@book.Genre</td>
                                    <td>
                                        <a href="/Book/Read/@book.EBookID" class="btn btn-success">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyeglasses" viewBox="0 0 16 16">
                                                <path d="M4 6a2 2 0 1 1 0 4 2 2 0 0 1 0-4m2.625.547a3 3 0 0 0-5.584.953H.5a.5.5 0 0 0 0 1h.541A3 3 0 0 0 7 8a1 1 0 0 1 2 0 3 3 0 0 0 5.959.5h.541a.5.5 0 0 0 0-1h-.541a3 3 0 0 0-5.584-.953A2 2 0 0 0 8 6c-.532 0-1.016.208-1.375.547M14 8a2 2 0 1 1-4 0 2 2 0 0 1 4 0" />
                                            </svg>
                                        </a>
                                        <button @onclick="() => DownloadBook(book.FilePath)" class="btn btn-primary">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
                                                <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5" />
                                                <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z" />
                                            </svg>
                                        </button>
                                        <div style="max-width:30px;">
                                            <NavLink class="nav-link" href="@($"/BookDetail/{book.EBookID}")">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="text-dark" class="bi bi-info-circle" viewBox="0 0 16 16">
                                                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                    <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0" />
                                                </svg>
                                            </NavLink>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
        else
        {
            <div class="col-12">
                <div class="col-12" style="text-align:center"><h3>Dine købte bøger</h3></div>
                <div class="col-12">
                    <table class="table table-light">
                        <thead>
                            <tr>
                                <th scope="col">Title</th>
                                <th scope="col">Price</th>
                                <th scope="col">Genre</th>
                                <th scope="col">Handlinger</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (PubHubEBook book in PurchasedBooks)
                            {
                                <tr>
                                    <th scope="row">@book.Title</th>
                                    <td>@book.Price Kr.</td>
                                    <td>@book.Genre</td>
                                    <td>
                                        <div class="row">
                                            <div class="col-auto">
                                                <a href="/Book/Read/@book.EBookID" class="btn btn-success">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eyeglasses" viewBox="0 0 16 16">
                                                        <path d="M4 6a2 2 0 1 1 0 4 2 2 0 0 1 0-4m2.625.547a3 3 0 0 0-5.584.953H.5a.5.5 0 0 0 0 1h.541A3 3 0 0 0 7 8a1 1 0 0 1 2 0 3 3 0 0 0 5.959.5h.541a.5.5 0 0 0 0-1h-.541a3 3 0 0 0-5.584-.953A2 2 0 0 0 8 6c-.532 0-1.016.208-1.375.547M14 8a2 2 0 1 1-4 0 2 2 0 0 1 4 0" />
                                                    </svg>
                                                </a>
                                            </div>
                                            <div class="col-auto">
                                                <button @onclick="() =>DownloadBook(book.FilePath)" class="btn btn-primary">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
                                                        <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5" />
                                                        <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z" />
                                                    </svg>
                                                </button>
                                            </div>
                                            <div class="col-auto">
                                                <NavLink class="nav-link p-0 m-auto" href="@($"/BookDetail/{book.EBookID}")">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="text-dark" class="bi bi-info-circle" viewBox="0 0 16 16">
                                                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                                        <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0" />
                                                    </svg>
                                                </NavLink>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    }
</div>


@code {
    public List<PubHubEBook> PurchasedBooks { get; set; } = new();
    public List<PubHubSubscription> Subscriptions { get; set; } = new();
    public List<PubHubEBook> BooksFromSubscriptions { get; set; } = new();

    public double TotalSpendings { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var claimsPrincipal = signInManager.Context.User;
        ApplicationUser user = await userManager.GetUserAsync(claimsPrincipal);

        if (claimsPrincipal != null && user != null)
        {
            ServiceResponse<List<PubHubEBook>> apiPurchasedBooksResult = await services.GetAllReadersBooks(claimsPrincipal, user.Id) ?? new ServiceResponse<List<PubHubEBook>>();
            if (apiPurchasedBooksResult != null)
            {
                PurchasedBooks = apiPurchasedBooksResult.Data;
            }

            ServiceResponse<List<PubHubSubscription>> apiSubscriptionsResult = await services.GetAllReadersSubscriptions(claimsPrincipal, user.Id) ?? new ServiceResponse<List<PubHubSubscription>>();
            if (apiSubscriptionsResult != null)
            {
                Subscriptions = apiSubscriptionsResult.Data;
            }

            ServiceResponse<List<PubHubEBook>> apiBooksFromSubscriptionsResult = await services.GetAllBooksFromAllReaderSubscriptions(claimsPrincipal, user.Id) ?? new ServiceResponse<List<PubHubEBook>>();
            if (apiBooksFromSubscriptionsResult.Data != null)
            {
                BooksFromSubscriptions = apiBooksFromSubscriptionsResult.Data;
            }

            // ServiceResponse<double> apiBooksFromSubscriptionsResult = await services.GetTotalSpendings(claimsPrincipal, user.Id) ?? new ServiceResponse<double>();
            // BooksFromSubscriptions = apiBooksFromSubscriptionsResult.Data;

            StateHasChanged();
        }
    }

    private Stream GetFileStream(string _bookName)
    {

        var fileStream = new MemoryStream(File.ReadAllBytes(("EBooks/" + _bookName + ".pdf")));

        return fileStream;
    }

    private async Task DownloadBook(string _bookName)
    {
        var claimsPrincipal = signInManager.Context.User;
        ApplicationUser user = await userManager.GetUserAsync(claimsPrincipal);

        try
        {
            var fileStream = GetFileStream(_bookName);
            var fileName = (_bookName + ".pdf");

            using var streamRef = new DotNetStreamReference(stream: fileStream);

            await JS.InvokeVoidAsync("downloadFileFromStream", fileName, streamRef);
            await services.IncreaseBookDownloadCount(claimsPrincipal, user.Id, _bookName);
        }
        catch (Exception)
        {

            throw;
        }

    }



    private async Task UnSubFromSubscription(Guid _subID)
    {
        var claimsPrincipal = signInManager.Context.User;
        ApplicationUser user = await userManager.GetUserAsync(claimsPrincipal);

        if (claimsPrincipal != null && user != null)
        {
            await services.UnSubFromSubscription(claimsPrincipal, user.Id, _subID);
            navigationManager.NavigateTo("#");
        }
    }
}


<script>
    window.downloadFileFromStream = async (fileName, contentStreamReference) => {
        const arrayBuffer = await contentStreamReference.arrayBuffer();
        const blob = new Blob([arrayBuffer]);
        const url = URL.createObjectURL(blob);
        const anchorElement = document.createElement('a');
        anchorElement.href = url;
        anchorElement.download = fileName ?? '';
        anchorElement.click();
        anchorElement.remove();
        URL.revokeObjectURL(url);
    }
</script>